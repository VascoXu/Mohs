{"ast":null,"code":"var _jsxFileName = \"/Users/vascoxu/Desktop/smash/Mohs/frontend/src/Components/Procedure/Procedure.js\";\nimport React, { Component } from \"react\";\nimport Audio from \"../Audio/Audio\";\nimport \"../../App.css\";\nimport \"./Procedure.css\";\nimport { getCurrentTime, playSound, logData } from \"../helpers\";\nimport { startAudioRecording, stopAudioRecording } from \"../audio\";\n\nclass Procedure extends Component {\n  constructor(props) {\n    super(props);\n\n    this.inputChange = (index, event) => {\n      // Update procedure\n      let items = [...this.state.procedure];\n      items[index] = event.target.value;\n      this.setState({\n        procedure: items\n      });\n    };\n\n    this.procedureClick = (index, event) => {\n      this.setState({\n        step: index\n      }); // playSound(this.state.procedure[index]);\n    };\n\n    this.setEditMode = () => {\n      this.setState({\n        edit: true\n      });\n    };\n\n    this.getProcedure = () => {\n      // Get a list of procedures\n      fetch('/api/procedure').then(response => response.json()).then(data => {\n        this.procedure = data;\n      });\n    };\n\n    this.done = () => {\n      // Play sound of question\n      //playSound(this.state.procedure[this.state.step]);\n      // Stop recording\n      var filename = `${localStorage.getItem(\"currentPnum\")}-${this.state.step}`;\n\n      if (this.state.step !== 0) {\n        stopAudioRecording(filename);\n      }\n\n      startAudioRecording(); // Update step\n\n      this.setState({\n        step: this.state.step + 1\n      }); // Insert data to database (i.e log data)\n\n      var timeElapsed = getCurrentTime();\n      var data = {\n        pnum: localStorage.getItem(\"currentPnum\"),\n        timestamp: timeElapsed,\n        action: `Procedure (Step ${this.state.step}): ${this.state.procedure[this.state.step]}`\n      };\n      logData(data);\n    };\n\n    this.back = () => {\n      this.setState({\n        step: this.state.step - 1\n      });\n    };\n\n    this.state = {\n      procedure: [],\n      step: 0,\n      edit: false\n    };\n  }\n\n  componentDidMount() {\n    // Fetch procedure after mount\n    // this.getProcedure();\n    var procedure = [\"Wash hands w/ soap\", \"Put day x supplies on clean surface outside bathroom\", \"Fresh clean towel & trash bag in bathroom\", \"Shower, remove, gently wash\", \"Dry body and wound then go to set up\", \"Pat dry w/wound gauze or qtip\", \"Cut non-stick dressing then open vaseline\", \"Using 2 qtips thickly “ice” wound with vaseline\", \"Cover with gauze and tape on\", \"See you tomorrow\"];\n    this.setState({\n      procedure: procedure\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full-height mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-white text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"Procedure\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, \"Step \", this.state.step, \":\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"step\",\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, \" \", this.state.procedure[this.state.step], \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.repeat,\n      className: \"shadow btn btn-secondary btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"Repeat\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.done,\n      className: \"shadow btn ml-4 btn-secondary btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Done\"), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"sound-clips\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group list-group-hover mt-2 mb-5 procedure-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, this.state.procedure.map((step, i) => {\n      return this.state.edit ? /*#__PURE__*/React.createElement(\"input\", {\n        key: i,\n        onChange: this.inputChange.bind(this, i),\n        type: \"text\",\n        className: \"form-control procedure\",\n        value: step,\n        autoFocus: !i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        onClick: this.procedureClick.bind(this, i),\n        id: 'l' + i,\n        className: `list-group-item ${this.state.step === i ? 'active' : ''}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 23\n        }\n      }, step);\n    }))))), /*#__PURE__*/React.createElement(Audio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Procedure;","map":{"version":3,"sources":["/Users/vascoxu/Desktop/smash/Mohs/frontend/src/Components/Procedure/Procedure.js"],"names":["React","Component","Audio","getCurrentTime","playSound","logData","startAudioRecording","stopAudioRecording","Procedure","constructor","props","inputChange","index","event","items","state","procedure","target","value","setState","procedureClick","step","setEditMode","edit","getProcedure","fetch","then","response","json","data","done","filename","localStorage","getItem","timeElapsed","pnum","timestamp","action","back","componentDidMount","render","repeat","map","i","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Audio from \"../Audio/Audio\"\nimport \"../../App.css\";\nimport \"./Procedure.css\";\nimport { getCurrentTime, playSound, logData } from \"../helpers\";\nimport { startAudioRecording, stopAudioRecording } from \"../audio\";\n\nclass Procedure extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      procedure: [],\n      step: 0,\n      edit: false\n    };\n  }\n\n  componentDidMount() {\n    // Fetch procedure after mount\n    // this.getProcedure();\n    var procedure = [\n      \"Wash hands w/ soap\", \n      \"Put day x supplies on clean surface outside bathroom\",\n      \"Fresh clean towel & trash bag in bathroom\",\n      \"Shower, remove, gently wash\",\n      \"Dry body and wound then go to set up\",\n      \"Pat dry w/wound gauze or qtip\",\n      \"Cut non-stick dressing then open vaseline\",\n      \"Using 2 qtips thickly “ice” wound with vaseline\",\n      \"Cover with gauze and tape on\",\n      \"See you tomorrow\"\n    ];\n    this.setState({\n      procedure: procedure\n    });\n  }\n\n  inputChange = (index, event) => {\n    // Update procedure\n    let items = [...this.state.procedure];\n    items[index] = event.target.value;\n\n    this.setState({\n      procedure: items\n    });\n  }\n\n  procedureClick = (index, event) => {\n    this.setState({\n      step: index\n    });\n    // playSound(this.state.procedure[index]);\n  }\n\n  setEditMode = () => {\n    this.setState({\n      edit: true\n    })\n  }\n\n  getProcedure = () => {\n    // Get a list of procedures\n    fetch('/api/procedure')\n    .then(response => response.json())\n    .then(data => {\n      this.procedure = data;\n    })\n  }\n\n  done = () => {\n    // Play sound of question\n    //playSound(this.state.procedure[this.state.step]);\n\n    // Stop recording\n    var filename = `${localStorage.getItem(\"currentPnum\")}-${this.state.step}`;\n    if (this.state.step !== 0) {\n      stopAudioRecording(filename);\n    }\n    startAudioRecording();\n\n    // Update step\n    this.setState({\n      step: (this.state.step + 1),\n    });\n\n    // Insert data to database (i.e log data)\n    var timeElapsed = getCurrentTime();\n    var data = {pnum: localStorage.getItem(\"currentPnum\"), timestamp: timeElapsed, action: `Procedure (Step ${this.state.step}): ${this.state.procedure[this.state.step]}`};\n    logData(data);\n  }\n\n  back = () => {\n    this.setState({\n      step: (this.state.step - 1)\n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"full-height mt-2\">\n        <h2 className=\"text-white text-center\">Procedure</h2>\n        <hr/>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"card mt-2\">\n                <div className=\"card-body text-center\">\n                  <h5 className=\"card-title\">Step {this.state.step}:</h5>\n                  <hr/>\n                  <p id=\"step\" className=\"card-text\"> {this.state.procedure[this.state.step]} </p>\n                </div>\n              </div>\n              <div className=\"text-center mt-4\">\n                <button type=\"button\" onClick={this.repeat} className=\"shadow btn btn-secondary btn-lg dark-border\">Repeat</button>\n                <button type=\"button\" onClick={this.done} className=\"shadow btn ml-4 btn-secondary btn-lg dark-border\">Done</button>\n                <section className=\"sound-clips\">\n                </section>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <ul className=\"list-group list-group-hover mt-2 mb-5 procedure-list\">\n                {this.state.procedure.map((step, i) => \n                  {return (this.state.edit\n                    ? <input key={i} onChange={this.inputChange.bind(this, i)} type=\"text\" className=\"form-control procedure\" value={step} autoFocus={!i} />\n                    : <li key={i} onClick={this.procedureClick.bind(this, i)} id={'l' + i} className={`list-group-item ${(this.state.step === i) ? 'active' : ''}`}>{step}</li>\n                  )}\n                )}\n              </ul>            \n            </div>\n          </div>\n        </div>\n        <Audio></Audio>\n      </div>\n    );\n  }\n}\n\nexport default Procedure;"]},"metadata":{},"sourceType":"module"}