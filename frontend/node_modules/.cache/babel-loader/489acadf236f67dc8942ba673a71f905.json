{"ast":null,"code":"var _jsxFileName = \"/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Procedure/Procedure.js\";\nimport React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"./Procedure.css\";\n\nclass Procedure extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startRecording = stream => {\n      // Start recording\n      this.mediaRecorder = new MediaRecorder(stream);\n      this.mediaRecorder.start(); // Start visualizing audio\n\n      this.visualize(stream);\n      console.log(this.mediaRecorder.state);\n      console.log(\"recorder started\");\n      var dat = this;\n\n      this.mediaRecorder.ondataavailable = function (e) {\n        dat.chunks.push(e.data);\n      };\n    };\n\n    this.recordTime = () => {\n      // Ensure getUserMedia is supported\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        console.log('getUserMedia supported.');\n        navigator.mediaDevices.getUserMedia( // constraints - only audio needed for this app\n        {\n          audio: true\n        }) // Success callback, start recording\n        .then(stream => this.startRecording(stream)) // Error callback\n        .catch(function (err) {\n          console.log('The following getUserMedia error occured: ' + err);\n        });\n      } else {\n        console.log('getUserMedia not supported on your browser!');\n      }\n    };\n\n    this.visualize = stream => {\n      const canvas = document.querySelector('.visualizer');\n      const canvasCtx = canvas.getContext(\"2d\");\n      let audioCtx;\n\n      if (!audioCtx) {\n        audioCtx = new AudioContext();\n      }\n\n      const source = audioCtx.createMediaStreamSource(stream);\n      const analyser = audioCtx.createAnalyser();\n      analyser.fftSize = 2048;\n      const bufferLength = analyser.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      source.connect(analyser); //analyser.connect(audioCtx.destination);\n\n      draw();\n\n      function draw() {\n        const WIDTH = canvas.width;\n        const HEIGHT = canvas.height;\n        requestAnimationFrame(draw);\n        analyser.getByteTimeDomainData(dataArray);\n        canvasCtx.fillStyle = 'rgb(200, 200, 200)';\n        canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\n        canvasCtx.lineWidth = 2;\n        canvasCtx.strokeStyle = 'rgb(0, 0, 0)';\n        canvasCtx.beginPath();\n        let sliceWidth = WIDTH * 1.0 / bufferLength;\n        let x = 0;\n\n        for (let i = 0; i < bufferLength; i++) {\n          let v = dataArray[i] / 128.0;\n          let y = v * HEIGHT / 2;\n\n          if (i === 0) {\n            canvasCtx.moveTo(x, y);\n          } else {\n            canvasCtx.lineTo(x, y);\n          }\n\n          x += sliceWidth;\n        }\n\n        canvasCtx.lineTo(canvas.width, canvas.height / 2);\n        canvasCtx.stroke();\n      }\n    };\n\n    this.done = () => {\n      this.setState({\n        step: this.state.step + 1\n      });\n      this.recordTime();\n    };\n\n    this.back = () => {\n      this.setState({\n        step: this.state.step - 1\n      });\n    };\n\n    this.stopRecording = e => {\n      // Stop and save the recording\n      const soundClips = document.querySelector('.sound-clips');\n      console.log(\"recorder onstopped\");\n      const clipName = prompt('Enter a name for your sound clip');\n      const clipContainer = document.createElement('article');\n      const clipLabel = document.createElement('p');\n      const audio = document.createElement('audio');\n      const deleteButton = document.createElement('button');\n      clipContainer.classList.add('clip');\n      audio.setAttribute('controls', '');\n      deleteButton.innerHTML = \"Delete\";\n      clipLabel.innerHTML = clipName;\n      clipContainer.appendChild(audio);\n      clipContainer.appendChild(clipLabel);\n      clipContainer.appendChild(deleteButton);\n      soundClips.appendChild(clipContainer);\n      const blob = new Blob(this.chunks, {\n        'type': 'audio/ogg; codecs=opus'\n      });\n      this.chunks = [];\n      const audioURL = window.URL.createObjectURL(blob);\n      audio.src = audioURL;\n\n      deleteButton.onclick = function (e) {\n        let evtTgt = e.target;\n        evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode);\n      };\n    };\n\n    this.stop = () => {\n      // Stop recording\n      this.mediaRecorder.stop();\n      console.log(this.mediaRecorder.state);\n      console.log(\"recorder stopped\");\n\n      this.mediaRecorder.onstop = e => this.stopRecording(e);\n    };\n\n    this.state = {\n      step: 0\n    };\n    this.mediaRecorder = {};\n    this.chunks = [];\n  }\n\n  render() {\n    const procedure = [\"Wash hands w/ soap\", \"Put day x supplies on clean surface outside bathroom\", \"Fresh clean towel & trash bag in bathroom\", \"Shower, remove, gently wash\", \"Dry body and wound then go to set up\", \"Pat dry w/wound gauze or qtip\", \"Cut non-stick dressing then open vaseline\", \"Using 2 qtips thickly “ice” wound with vaseline\", \"Cover with gauze and tape on\", \"See you tomorrow\"];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full-height mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-white text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, \"Procedure\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, \"Step:\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"step\",\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, \" \", procedure[this.state.step], \" \"))), /*#__PURE__*/React.createElement(\"canvas\", {\n      class: \"visualizer\",\n      height: \"60px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.recordTime,\n      className: \"shadow btn mt-3 ml-3 btn-light btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, \"Record\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.done,\n      className: \"shadow btn mt-3 ml-3 btn-light btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, \"Done\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.stop,\n      className: \"shadow btn mt-3 ml-3 btn-light btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, \"Stop\"), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"sound-clips\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group mt-2 mb-5 procedure-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }\n    }, procedure.map((step, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      id: 'l' + i,\n      className: `list-group-item ${this.state.step === i ? 'active' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }, step)))))));\n  }\n\n}\n\nexport default Procedure;","map":{"version":3,"sources":["/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Procedure/Procedure.js"],"names":["React","Component","Procedure","constructor","props","startRecording","stream","mediaRecorder","MediaRecorder","start","visualize","console","log","state","dat","ondataavailable","e","chunks","push","data","recordTime","navigator","mediaDevices","getUserMedia","audio","then","catch","err","canvas","document","querySelector","canvasCtx","getContext","audioCtx","AudioContext","source","createMediaStreamSource","analyser","createAnalyser","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","connect","draw","WIDTH","width","HEIGHT","height","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","done","setState","step","back","stopRecording","soundClips","clipName","prompt","clipContainer","createElement","clipLabel","deleteButton","classList","add","setAttribute","innerHTML","appendChild","blob","Blob","audioURL","window","URL","createObjectURL","src","onclick","evtTgt","target","parentNode","removeChild","stop","onstop","render","procedure","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"./Procedure.css\";\n\n\nclass Procedure extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 0\n    };\n    this.mediaRecorder = {};\n    this.chunks = [];\n  }\n\n  startRecording = (stream) => {\n    // Start recording\n    this.mediaRecorder = new MediaRecorder(stream);\n    this.mediaRecorder.start();\n\n    // Start visualizing audio\n    this.visualize(stream);\n    console.log(this.mediaRecorder.state);\n    console.log(\"recorder started\");\n\n    var dat = this;\n    this.mediaRecorder.ondataavailable = function(e) {\n      dat.chunks.push(e.data);\n    }\n  }\n\n  recordTime = () => {\n    // Ensure getUserMedia is supported\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      console.log('getUserMedia supported.');\n      navigator.mediaDevices.getUserMedia (\n         // constraints - only audio needed for this app\n         {\n            audio: true\n         })\n\n         // Success callback, start recording\n         .then((stream) => this.startRecording(stream))\n   \n         // Error callback\n         .catch(function(err) {\n            console.log('The following getUserMedia error occured: ' + err);\n         }\n      );\n    } else {\n      console.log('getUserMedia not supported on your browser!');\n    }\n  }\n\n  visualize = (stream) => {\n    const canvas = document.querySelector('.visualizer');\n    const canvasCtx = canvas.getContext(\"2d\");\n    let audioCtx;\n\n    if(!audioCtx) {\n      audioCtx = new AudioContext();\n    }\n  \n    const source = audioCtx.createMediaStreamSource(stream);\n  \n    const analyser = audioCtx.createAnalyser();\n    analyser.fftSize = 2048;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n  \n    source.connect(analyser);\n    //analyser.connect(audioCtx.destination);\n  \n    draw()\n  \n    function draw() {\n      const WIDTH = canvas.width\n      const HEIGHT = canvas.height;\n  \n      requestAnimationFrame(draw);\n  \n      analyser.getByteTimeDomainData(dataArray);\n  \n      canvasCtx.fillStyle = 'rgb(200, 200, 200)';\n      canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\n  \n      canvasCtx.lineWidth = 2;\n      canvasCtx.strokeStyle = 'rgb(0, 0, 0)';\n  \n      canvasCtx.beginPath();\n  \n      let sliceWidth = WIDTH * 1.0 / bufferLength;\n      let x = 0;\n  \n  \n      for(let i = 0; i < bufferLength; i++) {\n  \n        let v = dataArray[i] / 128.0;\n        let y = v * HEIGHT/2;\n  \n        if(i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n  \n        x += sliceWidth;\n      }\n  \n      canvasCtx.lineTo(canvas.width, canvas.height/2);\n      canvasCtx.stroke();\n  \n    }\n  }\n\n  done = () => {\n    this.setState({\n      step: (this.state.step + 1) \n    });\n    this.recordTime();\n  }\n\n  back = () => {\n    this.setState({\n      step: (this.state.step - 1)\n    });\n  }\n  \n  stopRecording = (e) => {\n    // Stop and save the recording\n    const soundClips = document.querySelector('.sound-clips');\n\n    console.log(\"recorder onstopped\");\n    \n    const clipName = prompt('Enter a name for your sound clip');\n  \n    const clipContainer = document.createElement('article');\n    const clipLabel = document.createElement('p');\n    const audio = document.createElement('audio');\n    const deleteButton = document.createElement('button');\n             \n    clipContainer.classList.add('clip');\n    audio.setAttribute('controls', '');\n    deleteButton.innerHTML = \"Delete\";\n    clipLabel.innerHTML = clipName;\n  \n    clipContainer.appendChild(audio);\n    clipContainer.appendChild(clipLabel);\n    clipContainer.appendChild(deleteButton);\n    soundClips.appendChild(clipContainer);\n    \n    const blob = new Blob(this.chunks, { 'type' : 'audio/ogg; codecs=opus' });\n    this.chunks = [];\n    const audioURL = window.URL.createObjectURL(blob);\n    audio.src = audioURL;\n  \n    deleteButton.onclick = function(e) {\n      let evtTgt = e.target;\n      evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode);\n    }\n  }\n\n  stop = () => {\n    // Stop recording\n    this.mediaRecorder.stop();\n    console.log(this.mediaRecorder.state);\n    console.log(\"recorder stopped\");\n    this.mediaRecorder.onstop = (e) => this.stopRecording(e);\n  }\n\n  render() {\n\n    const procedure = [\n      \"Wash hands w/ soap\", \n      \"Put day x supplies on clean surface outside bathroom\",\n      \"Fresh clean towel & trash bag in bathroom\",\n      \"Shower, remove, gently wash\",\n      \"Dry body and wound then go to set up\",\n      \"Pat dry w/wound gauze or qtip\",\n      \"Cut non-stick dressing then open vaseline\",\n      \"Using 2 qtips thickly “ice” wound with vaseline\",\n      \"Cover with gauze and tape on\",\n      \"See you tomorrow\"\n    ];\n  \n    return (\n      <div className=\"full-height mt-2\">\n        <h2 className=\"text-white text-center\">Procedure</h2>\n        <hr/>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"card mt-2\">\n                <div className=\"card-body text-center\">\n                  <h5 className=\"card-title\">Step:</h5>\n                  <hr/>\n                  <p id=\"step\" className=\"card-text\"> {procedure[this.state.step]} </p>\n                </div>\n              </div>\n              <canvas class=\"visualizer\" height=\"60px\"></canvas>\n              <div className=\"text-center\">\n                <button type=\"button\" onClick={this.recordTime} className=\"shadow btn mt-3 ml-3 btn-light btn-lg dark-border\">Record</button>\n                <button type=\"button\" onClick={this.done} className=\"shadow btn mt-3 ml-3 btn-light btn-lg dark-border\">Done</button>\n                <button type=\"button\" onClick={this.stop} className=\"shadow btn mt-3 ml-3 btn-light btn-lg dark-border\">Stop</button>\n                <section className=\"sound-clips\">\n                </section>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <ul className=\"list-group mt-2 mb-5 procedure-list\">\n                {procedure.map((step, i) => \n                  <li key={i} id={'l' + i} className={`list-group-item ${(this.state.step === i) ? 'active' : ''}`}>{step}</li>\n                )}\n              </ul>            \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Procedure;"]},"metadata":{},"sourceType":"module"}