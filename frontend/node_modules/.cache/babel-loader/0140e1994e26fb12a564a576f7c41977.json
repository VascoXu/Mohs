{"ast":null,"code":"var _jsxFileName = \"/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Audio/Audio.js\";\nimport React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"./Audio.css\";\n\nclass Audio extends Component {\n  constructor(props) {\n    super(props);\n\n    this.record = () => {\n      // Ensure getUserMedia is supported\n      if (this.state.record) {\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n          console.log('getUserMedia supported.');\n          navigator.mediaDevices.getUserMedia({\n            audio: true\n          }) // Success callback, start recording\n          .then(stream => this.startRecording(stream)) // Error callback\n          .catch(function (err) {\n            console.log('The following getUserMedia error occured: ' + err);\n          });\n        } else {\n          console.log('getUserMedia not supported on your browser!');\n        }\n      } else {\n        this.stopRecording();\n      }\n\n      this.setState({\n        record: !this.state.record\n      });\n    };\n\n    this.startRecording = stream => {\n      // Start recording\n      this.mediaRecorder = new MediaRecorder(stream);\n      this.mediaRecorder.start(); // Start visualizing audio\n\n      this.visualize(stream);\n      console.log(this.mediaRecorder.state);\n      console.log(\"recorder started\");\n      var dat = this;\n\n      this.mediaRecorder.ondataavailable = function (e) {\n        dat.chunks.push(e.data);\n      };\n    };\n\n    this.stop = () => {\n      // Stop recording\n      this.mediaRecorder.stop();\n      console.log(this.mediaRecorder.state);\n      console.log(\"recorder stopped\");\n\n      this.mediaRecorder.onstop = e => this.stopRecording(e);\n    };\n\n    this.stopRecording = e => {\n      // Stop and save the recording\n      const soundClips = document.querySelector('.sound-clips');\n      console.log(\"recorder onstopped\");\n      const clipName = prompt('Enter a name for your sound clip');\n      const clipContainer = document.createElement('article');\n      const clipLabel = document.createElement('p');\n      const audio = document.createElement('audio');\n      const deleteButton = document.createElement('button');\n      clipContainer.classList.add('clip');\n      audio.setAttribute('controls', '');\n      deleteButton.innerHTML = \"Delete\";\n      clipLabel.innerHTML = clipName;\n      clipContainer.appendChild(audio);\n      clipContainer.appendChild(clipLabel);\n      clipContainer.appendChild(deleteButton);\n      soundClips.appendChild(clipContainer);\n      const blob = new Blob(this.chunks, {\n        'type': 'audio/ogg; codecs=opus'\n      }); // Download blob\n\n      var soundURL = URL.createObjectURL(blob);\n      this.chunks = [];\n      const audioURL = window.URL.createObjectURL(blob);\n      audio.src = audioURL;\n\n      deleteButton.onclick = function (e) {\n        let evtTgt = e.target;\n        evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode);\n      };\n    };\n\n    this.visualize = stream => {\n      // Visualize audio stream\n      const canvas = document.querySelector('.visualizer');\n      const canvasCtx = canvas.getContext(\"2d\");\n      let audioCtx;\n\n      if (!audioCtx) {\n        audioCtx = new AudioContext();\n      }\n\n      const source = audioCtx.createMediaStreamSource(stream);\n      const analyser = audioCtx.createAnalyser();\n      analyser.fftSize = 2048;\n      const bufferLength = analyser.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      source.connect(analyser); //analyser.connect(audioCtx.destination);\n\n      draw();\n\n      function draw() {\n        const WIDTH = canvas.width;\n        const HEIGHT = canvas.height;\n        requestAnimationFrame(draw);\n        analyser.getByteTimeDomainData(dataArray);\n        canvasCtx.fillStyle = 'rgb(200, 200, 200)';\n        canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\n        canvasCtx.lineWidth = 2;\n        canvasCtx.strokeStyle = 'rgb(0, 0, 0)';\n        canvasCtx.beginPath();\n        let sliceWidth = WIDTH * 1.0 / bufferLength;\n        let x = 0;\n\n        for (let i = 0; i < bufferLength; i++) {\n          let v = dataArray[i] / 128.0;\n          let y = v * HEIGHT / 2;\n\n          if (i === 0) {\n            canvasCtx.moveTo(x, y);\n          } else {\n            canvasCtx.lineTo(x, y);\n          }\n\n          x += sliceWidth;\n        }\n\n        canvasCtx.lineTo(canvas.width, canvas.height / 2);\n        canvasCtx.stroke();\n      }\n    };\n\n    this.state = {\n      record: true\n    };\n    this.mediaRecorder = {};\n    this.chunks = [];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fixed-bottom ml-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.record,\n      className: \"btn btn-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      className: \"bi bi-mic-fill\",\n      width: \"3em\",\n      height: \"3em\",\n      viewBox: \"0 0 16 16\",\n      fill: \"currentColor\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      fill: \"green\",\n      filld: \"M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0V3z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-xs-6 ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      className: \"visualizer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Audio;","map":{"version":3,"sources":["/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Audio/Audio.js"],"names":["React","Component","Audio","constructor","props","record","state","navigator","mediaDevices","getUserMedia","console","log","audio","then","stream","startRecording","catch","err","stopRecording","setState","mediaRecorder","MediaRecorder","start","visualize","dat","ondataavailable","e","chunks","push","data","stop","onstop","soundClips","document","querySelector","clipName","prompt","clipContainer","createElement","clipLabel","deleteButton","classList","add","setAttribute","innerHTML","appendChild","blob","Blob","soundURL","URL","createObjectURL","audioURL","window","src","onclick","evtTgt","target","parentNode","removeChild","canvas","canvasCtx","getContext","audioCtx","AudioContext","source","createMediaStreamSource","analyser","createAnalyser","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","connect","draw","WIDTH","width","HEIGHT","height","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"./Audio.css\";\n\nclass Audio extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      record: true\n    };\n    this.mediaRecorder = {};\n    this.chunks = [];\n  }\n\n  record = () => {\n    // Ensure getUserMedia is supported\n    if (this.state.record) {\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        console.log('getUserMedia supported.');\n        navigator.mediaDevices.getUserMedia (\n          {\n            audio: true\n          })\n\n          // Success callback, start recording\n          .then((stream) => this.startRecording(stream))\n    \n          // Error callback\n          .catch(function(err) {\n            console.log('The following getUserMedia error occured: ' + err);\n          }\n        );\n      } else {\n        console.log('getUserMedia not supported on your browser!');\n      }\n    }\n    else {\n      this.stopRecording();\n    }\n\n    this.setState({\n      record: !this.state.record\n    });\n\n  }\n\n  startRecording = (stream) => {\n    // Start recording\n    this.mediaRecorder = new MediaRecorder(stream);\n    this.mediaRecorder.start();\n\n    // Start visualizing audio\n    this.visualize(stream);\n\n    console.log(this.mediaRecorder.state);\n    console.log(\"recorder started\");\n\n    var dat = this;\n    this.mediaRecorder.ondataavailable = function(e) {\n      dat.chunks.push(e.data);\n    }\n  }\n\n  stop = () => {\n    // Stop recording\n    this.mediaRecorder.stop();\n    console.log(this.mediaRecorder.state);\n    console.log(\"recorder stopped\");\n    this.mediaRecorder.onstop = (e) => this.stopRecording(e);\n  }\n\n  stopRecording = (e) => {\n    // Stop and save the recording\n    const soundClips = document.querySelector('.sound-clips');\n\n    console.log(\"recorder onstopped\");\n    \n    const clipName = prompt('Enter a name for your sound clip');\n  \n    const clipContainer = document.createElement('article');\n    const clipLabel = document.createElement('p');\n    const audio = document.createElement('audio');\n    const deleteButton = document.createElement('button');\n             \n    clipContainer.classList.add('clip');\n    audio.setAttribute('controls', '');\n    deleteButton.innerHTML = \"Delete\";\n    clipLabel.innerHTML = clipName;\n  \n    clipContainer.appendChild(audio);\n    clipContainer.appendChild(clipLabel);\n    clipContainer.appendChild(deleteButton);\n    soundClips.appendChild(clipContainer);\n    \n    const blob = new Blob(this.chunks, { 'type' : 'audio/ogg; codecs=opus' });\n    \n    // Download blob\n    var soundURL = URL.createObjectURL(blob);\n\n    this.chunks = [];\n    const audioURL = window.URL.createObjectURL(blob);\n    audio.src = audioURL;\n  \n    deleteButton.onclick = function(e) {\n      let evtTgt = e.target;\n      evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode);\n    }\n  }\n\n  visualize = (stream) => {\n    // Visualize audio stream\n    const canvas = document.querySelector('.visualizer');\n    const canvasCtx = canvas.getContext(\"2d\");\n    let audioCtx;\n\n    if(!audioCtx) {\n      audioCtx = new AudioContext();\n    }\n  \n    const source = audioCtx.createMediaStreamSource(stream);\n  \n    const analyser = audioCtx.createAnalyser();\n    analyser.fftSize = 2048;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n  \n    source.connect(analyser);\n    //analyser.connect(audioCtx.destination);\n  \n    draw()\n  \n    function draw() {\n      const WIDTH = canvas.width\n      const HEIGHT = canvas.height;\n  \n      requestAnimationFrame(draw);\n  \n      analyser.getByteTimeDomainData(dataArray);\n  \n      canvasCtx.fillStyle = 'rgb(200, 200, 200)';\n      canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\n  \n      canvasCtx.lineWidth = 2;\n      canvasCtx.strokeStyle = 'rgb(0, 0, 0)';\n  \n      canvasCtx.beginPath();\n  \n      let sliceWidth = WIDTH * 1.0 / bufferLength;\n      let x = 0;\n  \n  \n      for(let i = 0; i < bufferLength; i++) {\n  \n        let v = dataArray[i] / 128.0;\n        let y = v * HEIGHT/2;\n  \n        if(i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n  \n        x += sliceWidth;\n      }\n  \n      canvasCtx.lineTo(canvas.width, canvas.height/2);\n      canvasCtx.stroke();\n  \n    }\n  }\n\n  render() {\n    return (\n      <div className=\"fixed-bottom ml-3 mb-3\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-xs-6\">\n              <button onClick={this.record} className=\"btn btn-light\">\n                <svg className=\"bi bi-mic-fill\" width=\"3em\" height=\"3em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fill=\"green\" filld=\"M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0V3z\"/>\n                  <path fillRule=\"evenodd\" d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z\"/>\n                </svg>\n              </button>\n            </div>\n            <div className=\"col-xs-6 ml-3\">\n              <canvas className=\"visualizer\"></canvas>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n\n}\n\nexport default Audio;"]},"metadata":{},"sourceType":"module"}