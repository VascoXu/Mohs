{"ast":null,"code":"var _jsxFileName = \"/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Procedure/Procedure.js\";\nimport React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"./Procedure.css\";\nimport { insertToDatabase, formatEpoch } from \"../helpers\";\n\nclass Procedure extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (index, event) => {\n      // Update procedure\n      let items = [...this.state.procedure];\n      items[index] = event.target.value;\n      this.setState({\n        procedure: items\n      });\n    };\n\n    this.setEditMode = () => {\n      this.setState({\n        edit: true\n      });\n    };\n\n    this.getProcedure = () => {\n      // Get a list of procedures\n      fetch('/api/procedure').then(response => response.json()).then(data => {\n        this.procedure = data;\n      });\n    };\n\n    this.done = () => {\n      // Update step\n      this.setState({\n        step: this.state.step + 1,\n        edit: false\n      }); // Insert data to database\n\n      var timeElapsed = formatEpoch(Math.floor(Date.now() / 1000) - this.props.startTime);\n      var data = {\n        timestamp: timeElapsed,\n        action: `Procedure (Step ${this.state.step}): ${this.state.procedure[this.state.step]}`\n      };\n      insertToDatabase(this.props.db, data);\n    };\n\n    this.back = () => {\n      this.setState({\n        step: this.state.step - 1\n      });\n    };\n\n    this.state = {\n      procedure: [],\n      step: 0,\n      edit: false\n    };\n  }\n\n  componentDidMount() {\n    // Fetch procedure after mount\n    // this.getProcedure();\n    var procedure = [\"Wash hands w/ soap\", \"Put day x supplies on clean surface outside bathroom\", \"Fresh clean towel & trash bag in bathroom\", \"Shower, remove, gently wash\", \"Dry body and wound then go to set up\", \"Pat dry w/wound gauze or qtip\", \"Cut non-stick dressing then open vaseline\", \"Using 2 qtips thickly “ice” wound with vaseline\", \"Cover with gauze and tape on\", \"See you tomorrow\"];\n    this.setState({\n      procedure: procedure\n    });\n  }\n\n  render() {\n    const isEditMode = false;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full-height mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-white text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"Procedure\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, \"Step \", this.state.step, \":\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"step\",\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, \" \", this.state.procedure[this.state.step], \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.repeat,\n      className: \"shadow btn ml-3 btn-light btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Repeat\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.done,\n      className: \"shadow btn ml-3 btn-light btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Done\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.setEditMode,\n      className: \"shadow btn ml-3 btn-danger btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Edit Mode\"), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"sound-clips\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group mt-2 mb-5 procedure-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, this.state.procedure.map((step, i) => {\n      return isEditMode ? /*#__PURE__*/React.createElement(\"input\", {\n        key: i,\n        onChange: this.handleChange.bind(this, i),\n        type: \"text\",\n        className: \"form-control procedure\",\n        value: step,\n        autoFocus: !i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        id: 'l' + i,\n        className: `list-group-item ${this.state.step === i ? 'active' : ''}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 23\n        }\n      }, step);\n    }))))));\n  }\n\n}\n\nexport default Procedure;","map":{"version":3,"sources":["/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Procedure/Procedure.js"],"names":["React","Component","insertToDatabase","formatEpoch","Procedure","constructor","props","handleChange","index","event","items","state","procedure","target","value","setState","setEditMode","edit","getProcedure","fetch","then","response","json","data","done","step","timeElapsed","Math","floor","Date","now","startTime","timestamp","action","db","back","componentDidMount","render","isEditMode","repeat","map","i","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"./Procedure.css\";\nimport { insertToDatabase, formatEpoch } from \"../helpers\";\n\n\nclass Procedure extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      procedure: [],\n      step: 0,\n      edit: false\n    };\n  }\n\n  componentDidMount() {\n    // Fetch procedure after mount\n    // this.getProcedure();\n    var procedure = [\n      \"Wash hands w/ soap\", \n      \"Put day x supplies on clean surface outside bathroom\",\n      \"Fresh clean towel & trash bag in bathroom\",\n      \"Shower, remove, gently wash\",\n      \"Dry body and wound then go to set up\",\n      \"Pat dry w/wound gauze or qtip\",\n      \"Cut non-stick dressing then open vaseline\",\n      \"Using 2 qtips thickly “ice” wound with vaseline\",\n      \"Cover with gauze and tape on\",\n      \"See you tomorrow\"\n    ];\n    this.setState({\n      procedure: procedure\n    });\n  }\n\n  handleChange = (index, event) => {\n    // Update procedure\n    let items = [...this.state.procedure];\n    items[index] = event.target.value;\n\n    this.setState({\n      procedure: items\n    });\n  }\n\n  setEditMode = () => {\n    this.setState({\n      edit: true\n    })\n  }\n\n  getProcedure = () => {\n    // Get a list of procedures\n    fetch('/api/procedure')\n    .then(response => response.json())\n    .then(data => {\n      this.procedure = data;\n    })\n  }\n\n  done = () => {\n    // Update step\n    this.setState({\n      step: (this.state.step + 1),\n      edit: false\n    });\n\n    // Insert data to database\n    var timeElapsed = formatEpoch(Math.floor(Date.now() / 1000) - this.props.startTime);\n    var data = {timestamp: timeElapsed, action: `Procedure (Step ${this.state.step}): ${this.state.procedure[this.state.step]}`};\n    insertToDatabase(this.props.db, data);\n  }\n\n  back = () => {\n    this.setState({\n      step: (this.state.step - 1)\n    });\n  }\n  \n  render() {\n\n    const isEditMode = false;\n  \n    return (\n      <div className=\"full-height mt-2\">\n        <h2 className=\"text-white text-center\">Procedure</h2>\n        <hr/>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"card mt-2\">\n                <div className=\"card-body text-center\">\n                  <h5 className=\"card-title\">Step {this.state.step}:</h5>\n                  <hr/>\n                  <p id=\"step\" className=\"card-text\"> {this.state.procedure[this.state.step]} </p>\n                </div>\n              </div>\n              <div className=\"text-center mt-5\">\n                <button type=\"button\" onClick={this.repeat} className=\"shadow btn ml-3 btn-light btn-lg dark-border\">Repeat</button>\n                <button type=\"button\" onClick={this.done} className=\"shadow btn ml-3 btn-light btn-lg dark-border\">Done</button>\n                <button type=\"button\" onClick={this.setEditMode} className=\"shadow btn ml-3 btn-danger btn-lg dark-border\">Edit Mode</button>\n                <section className=\"sound-clips\">\n                </section>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <ul className=\"list-group mt-2 mb-5 procedure-list\">\n                {this.state.procedure.map((step, i) => \n                  {return (isEditMode\n                    ? <input key={i} onChange={this.handleChange.bind(this, i)} type=\"text\" className=\"form-control procedure\" value={step} autoFocus={!i} />\n                    : <li key={i} id={'l' + i} className={`list-group-item ${(this.state.step === i) ? 'active' : ''}`}>{step}</li>\n                  )}\n                  \n                )}\n              </ul>            \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Procedure;"]},"metadata":{},"sourceType":"module"}