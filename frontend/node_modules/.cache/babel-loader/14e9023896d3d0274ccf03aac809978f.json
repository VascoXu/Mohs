{"ast":null,"code":"var _jsxFileName = \"/Users/vascoxu/Desktop/smash/Mohs/frontend/src/Components/Questions/Questions.js\";\nimport React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"./Questions.css\";\nimport { getCurrentTime, playSound, logData } from \"../helpers\";\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (index, event) => {\n      // Update questions\n      let items = [...this.state.questions];\n      items[index] = event.target.value;\n      this.setState({\n        questions: items\n      });\n    };\n\n    this.handleClick = (index, event) => {\n      // Play sound of question\n      // playSound(this.state.questions[index]);\n      // Insert data to database\n      var timeElapsed = getCurrentTime();\n      var data = {\n        pnum: localStorage.getItem(\"currentPnum\"),\n        timestamp: timeElapsed,\n        action: `Question ${index}: ${this.state.questions[index]}`\n      };\n      logData(data);\n    };\n\n    this.export = () => {\n      fetch('/api/export', {\n        method: 'POST',\n        body: JSON.stringify({\n          pnum: localStorage.getItem('currentPnum')\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.blob()).then(blob => {\n        var url = window.URL.createObjectURL(blob);\n        var a = document.createElement('a');\n        a.href = url;\n        a.download = `${localStorage.getItem('currentPnum')}.zip`;\n        document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n\n        a.click();\n        a.remove(); //afterwards we remove the element again         \n      });\n    };\n\n    this.setEditMode = () => {\n      this.setState({\n        edit: true\n      });\n    };\n\n    this.state = {\n      questions: [],\n      edit: false\n    };\n  }\n\n  componentDidMount() {\n    const questions = [\"Can I use Purell/hand sanitizer?\", \"How long do I wash my hands for?\", \"How long do I keep the band-aid for?\", \"Unanswerable\"];\n    this.setState({\n      questions: questions\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container full-height mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Questions\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, this.state.questions.map((question, i) => {\n      return this.state.edit ? /*#__PURE__*/React.createElement(\"input\", {\n        key: i,\n        onChange: this.handleChange.bind(this, i),\n        type: \"text\",\n        className: \"form-control question mt-2\",\n        value: this.state.questions[i],\n        autoFocus: !i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(\"button\", {\n        key: i,\n        onClick: this.handleClick.bind(this, i),\n        type: \"button\",\n        className: \"btn btn-light btn-block question\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, \"Q\", i, \": \", question);\n    } // <button key={i} type=\"button\" className=\"list-group-item list-group-item-action question mt-2\">Q{i}: {question}</button>\n    )), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container text-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.recordTime,\n      className: \"btn shadow ml-3 btn-dark btn-lg light-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 16 16\",\n      className: \"bi bi-bell-fill\",\n      fill: \"currentColor\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \"Reminder\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"export mr-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.export,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-download\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 69\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 122\n      }\n    }, \"Export Data\"))));\n  }\n\n}\n\nexport default Questions;","map":{"version":3,"sources":["/Users/vascoxu/Desktop/smash/Mohs/frontend/src/Components/Questions/Questions.js"],"names":["React","Component","getCurrentTime","playSound","logData","Questions","constructor","props","handleChange","index","event","items","state","questions","target","value","setState","handleClick","timeElapsed","data","pnum","localStorage","getItem","timestamp","action","export","fetch","method","body","JSON","stringify","headers","then","response","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","remove","setEditMode","edit","componentDidMount","render","map","question","i","bind","recordTime"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAO,iBAAP;AAEA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,OAApC,QAAmD,YAAnD;;AAGA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAEhCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,YApBmB,GAoBJ,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/B;AACA,UAAIC,KAAK,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,SAAf,CAAZ;AACAF,MAAAA,KAAK,CAACF,KAAD,CAAL,GAAeC,KAAK,CAACI,MAAN,CAAaC,KAA5B;AAEA,WAAKC,QAAL,CAAc;AACZH,QAAAA,SAAS,EAAEF;AADC,OAAd;AAGD,KA5BkB;;AAAA,SA8BnBM,WA9BmB,GA8BL,CAACR,KAAD,EAAQC,KAAR,KAAkB;AAC9B;AACA;AAEA;AACA,UAAIQ,WAAW,GAAGhB,cAAc,EAAhC;AACA,UAAIiB,IAAI,GAAG;AAACC,QAAAA,IAAI,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAP;AAA4CC,QAAAA,SAAS,EAAEL,WAAvD;AAAoEM,QAAAA,MAAM,EAAG,YAAWf,KAAM,KAAI,KAAKG,KAAL,CAAWC,SAAX,CAAqBJ,KAArB,CAA4B;AAA9H,OAAX;AACAL,MAAAA,OAAO,CAACe,IAAD,CAAP;AACD,KAtCkB;;AAAA,SAwCnBM,MAxCmB,GAwCV,MAAM;AACbC,MAAAA,KAAK,CAAC,aAAD,EAAgB;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,UAAAA,IAAI,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AADa,SAAf,CAFa;AAKnBS,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AALU,OAAhB,CAAL,CASCC,IATD,CASMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATlB,EAUCF,IAVD,CAUME,IAAI,IAAI;AACV,YAAIC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BJ,IAA3B,CAAV;AACA,YAAIK,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAR;AACAF,QAAAA,CAAC,CAACG,IAAF,GAASP,GAAT;AACAI,QAAAA,CAAC,CAACI,QAAF,GAAc,GAAEtB,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC,MAApD;AACAkB,QAAAA,QAAQ,CAACZ,IAAT,CAAcgB,WAAd,CAA0BL,CAA1B,EALU,CAKoB;;AAC9BA,QAAAA,CAAC,CAACM,KAAF;AACAN,QAAAA,CAAC,CAACO,MAAF,GAPU,CAOG;AAChB,OAlBD;AAmBD,KA5DkB;;AAAA,SA8DnBC,WA9DmB,GA8DL,MAAM;AAClB,WAAK/B,QAAL,CAAc;AACZgC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAlEkB;;AAEjB,SAAKpC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXmC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMpC,SAAS,GAAG,CAChB,kCADgB,EAEhB,kCAFgB,EAGhB,sCAHgB,EAIhB,cAJgB,CAAlB;AAMA,SAAKG,QAAL,CAAc;AACZH,MAAAA,SAAS,EAAEA;AADC,KAAd;AAGD;;AAkDDqC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKtC,KAAL,CAAWC,SAAX,CAAqBsC,GAArB,CAAyB,CAACC,QAAD,EAAWC,CAAX,KACxB;AAAC,aAAQ,KAAKzC,KAAL,CAAWoC,IAAX,gBACL;AAAO,QAAA,GAAG,EAAEK,CAAZ;AAAe,QAAA,QAAQ,EAAE,KAAK7C,YAAL,CAAkB8C,IAAlB,CAAuB,IAAvB,EAA6BD,CAA7B,CAAzB;AAA0D,QAAA,IAAI,EAAC,MAA/D;AAAsE,QAAA,SAAS,EAAC,4BAAhF;AAA6G,QAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWC,SAAX,CAAqBwC,CAArB,CAApH;AAA6I,QAAA,SAAS,EAAE,CAACA,CAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,gBAEL;AAAQ,QAAA,GAAG,EAAEA,CAAb;AAAgB,QAAA,OAAO,EAAE,KAAKpC,WAAL,CAAiBqC,IAAjB,CAAsB,IAAtB,EAA4BD,CAA5B,CAAzB;AAAyD,QAAA,IAAI,EAAC,QAA9D;AAAuE,QAAA,SAAS,EAAC,kCAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAsHA,CAAtH,QAA2HD,QAA3H,CAFH;AAGC,KAJH,CAKC;AALD,KADH,CAHF,eAaE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKG,UAApC;AAAgD,MAAA,SAAS,EAAC,8CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,MAAM,EAAC,KAAxB;AAA8B,MAAA,OAAO,EAAC,WAAtC;AAAkD,MAAA,SAAS,EAAC,iBAA5D;AAA8E,MAAA,IAAI,EAAC,cAAnF;AAAkG,MAAA,KAAK,EAAC,4BAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,CAAC,EAAC,8JAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADN,CAbF,eAuBE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAK9B,MAAtB;AAA8B,MAAA,SAAS,EAAC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA0D;AAAG,MAAA,SAAS,EAAC,gBAAb;AAA8B,qBAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1D,eAA+G;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA/G,CADF,CAvBF,CADF;AA6BD;;AApG+B;;AAuGlC,eAAepB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"./Questions.css\";\n\nimport { getCurrentTime, playSound, logData } from \"../helpers\";\n\n\nclass Questions extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      edit: false\n    };\n  }\n\n  componentDidMount() {\n    const questions = [\n      \"Can I use Purell/hand sanitizer?\", \n      \"How long do I wash my hands for?\",\n      \"How long do I keep the band-aid for?\",\n      \"Unanswerable\"\n    ];\n    this.setState({\n      questions: questions\n    });\n  }\n\n  handleChange = (index, event) => {\n    // Update questions\n    let items = [...this.state.questions];\n    items[index] = event.target.value;\n\n    this.setState({\n      questions: items\n    });\n  }\n\n  handleClick = (index, event) => {\n    // Play sound of question\n    // playSound(this.state.questions[index]);\n\n    // Insert data to database\n    var timeElapsed = getCurrentTime();\n    var data = {pnum: localStorage.getItem(\"currentPnum\"), timestamp: timeElapsed, action: `Question ${index}: ${this.state.questions[index]}`};\n    logData(data);\n  }\n\n  export = () => {\n    fetch('/api/export', {\n      method: 'POST',\n      body: JSON.stringify({\n        pnum: localStorage.getItem('currentPnum')\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    })\n    .then(response => response.blob())\n    .then(blob => {\n        var url = window.URL.createObjectURL(blob);\n        var a = document.createElement('a');\n        a.href = url;\n        a.download = `${localStorage.getItem('currentPnum')}.zip`;\n        document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n        a.click();    \n        a.remove();  //afterwards we remove the element again         \n    });\n  }\n\n  setEditMode = () => {\n    this.setState({\n      edit: true\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container full-height mt-2\">\n        <h2 className=\"text-center\">Questions</h2>\n        <hr/>\n        <div className=\"list-group\">\n          {this.state.questions.map((question, i) =>\n            {return (this.state.edit\n              ? <input key={i} onChange={this.handleChange.bind(this, i)} type=\"text\" className=\"form-control question mt-2\" value={this.state.questions[i]} autoFocus={!i} />\n              : <button key={i} onClick={this.handleClick.bind(this, i)} type=\"button\" className=\"btn btn-light btn-block question\">Q{i}: {question}</button>\n            )}\n            // <button key={i} type=\"button\" className=\"list-group-item list-group-item-action question mt-2\">Q{i}: {question}</button>\n          )}\n        </div>\n        {/* <Question key={i} data_index={i+1} question={question}></Question> */}\n        <div className=\"container text-center mt-5\">\n              <button type=\"button\" onClick={this.recordTime} className=\"btn shadow ml-3 btn-dark btn-lg light-border\">\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-bell-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zm.995-14.901a1 1 0 1 0-1.99 0A5.002 5.002 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901z\"/>\n                </svg>\n                <span className=\"ml-2\">Reminder</span>\n              </button>\n        </div>\n        \n        {/* Zip Folder */}\n        <div className=\"export mr-3 mb-3\">\n          <button onClick={this.export} className=\"btn btn-primary\"><i className=\"fa fa-download\" aria-hidden=\"true\"></i><span className=\"ml-2\">Export Data</span></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}