{"ast":null,"code":"var _jsxFileName = \"/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Questions/Questions.js\";\nimport React, { Component } from \"react\";\nimport Audio from '../Audio/Audio';\nimport \"../../App.css\";\nimport \"./Questions.css\";\nimport { insertToDatabase, formatEpoch } from \"../helpers\";\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (index, event) => {\n      // Update questions\n      let items = [...this.state.questions];\n      items[index] = event.target.value;\n      this.setState({\n        questions: items\n      });\n    };\n\n    this.handleClick = (index, event) => {\n      // Insert data to database\n      var timeElapsed = formatEpoch(Math.floor(Date.now() / 1000) - this.props.startTime);\n      var data = {\n        timestamp: timeElapsed,\n        action: `Question ${index}: ${this.state.questions[index]}`\n      };\n      insertToDatabase(this.props.db, data);\n      this.export();\n    };\n\n    this.export = () => {\n      var transaction = db.transaction('log', 'readonly');\n      var objectStore = transaction.objectStore('log');\n\n      objectStore.getAll().onsuccess = function (event) {\n        console.log(event.target.result);\n      };\n    };\n\n    this.state = {\n      questions: [],\n      edit: false\n    };\n  }\n\n  componentDidMount() {\n    const questions = [\"Can I use Purell/hand sanitizer?\", \"How long do I wash my hands for?\", \"How long do I keep the band-aid for?\", \"Unanswerable\"];\n    this.setState({\n      questions: questions\n    });\n  }\n\n  render() {\n    const isEditMode = false;\n\n    this.done = () => {};\n\n    this.repeat = () => {};\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container full-height mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Questions\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, this.state.questions.map((question, i) => {\n      return isEditMode ? /*#__PURE__*/React.createElement(\"input\", {\n        key: i,\n        onChange: this.handleChange.bind(this, i),\n        type: \"text\",\n        className: \"form-control question mt-2\",\n        value: this.state.questions[i],\n        autoFocus: !i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(\"button\", {\n        key: i,\n        onClick: this.handleClick.bind(this, i),\n        type: \"button\",\n        className: \"btn btn-light btn-block question\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, \"Q\", i, \": \", question);\n    } // <button key={i} type=\"button\" className=\"list-group-item list-group-item-action question mt-2\">Q{i}: {question}</button>\n    )), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container text-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.recordTime,\n      className: \"btn shadow ml-3 btn-dark btn-lg light-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Repeat\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.recordTime,\n      className: \"btn shadow ml-3 btn-dark btn-lg light-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"Done\")), /*#__PURE__*/React.createElement(Audio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Questions;","map":{"version":3,"sources":["/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Questions/Questions.js"],"names":["React","Component","Audio","insertToDatabase","formatEpoch","Questions","constructor","props","handleChange","index","event","items","state","questions","target","value","setState","handleClick","timeElapsed","Math","floor","Date","now","startTime","data","timestamp","action","db","export","transaction","objectStore","getAll","onsuccess","console","log","result","edit","componentDidMount","render","isEditMode","done","repeat","map","question","i","bind","recordTime"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Audio from '../Audio/Audio'\nimport \"../../App.css\";\nimport \"./Questions.css\";\n\nimport { insertToDatabase, formatEpoch } from \"../helpers\";\n\n\nclass Questions extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      edit: false\n    };\n  }\n\n  componentDidMount() {\n    const questions = [\n      \"Can I use Purell/hand sanitizer?\", \n      \"How long do I wash my hands for?\",\n      \"How long do I keep the band-aid for?\",\n      \"Unanswerable\"\n    ];\n    this.setState({\n      questions: questions\n    });\n  }\n\n  handleChange = (index, event) => {\n    // Update questions\n    let items = [...this.state.questions];\n    items[index] = event.target.value;\n\n    this.setState({\n      questions: items\n    });\n  }\n\n  handleClick = (index, event) => {\n    // Insert data to database\n    var timeElapsed = formatEpoch(Math.floor(Date.now() / 1000) - this.props.startTime);\n    var data = {timestamp: timeElapsed, action: `Question ${index}: ${this.state.questions[index]}`};\n    insertToDatabase(this.props.db, data);\n    this.export();\n  }\n\n  export = () => {\n    var transaction = db.transaction('log', 'readonly');\n    var objectStore = transaction.objectStore('log');\n    objectStore.getAll().onsuccess = function(event) {\n      console.log(event.target.result);\n    };\n  }\n\n  render() {\n    const isEditMode = false;\n\n\n    this.done = () => {\n\n    }\n\n    this.repeat = () => {\n\n    }\n\n    return (\n      <div className=\"container full-height mt-2\">\n        <h2 className=\"text-center\">Questions</h2>\n        <hr/>\n        <div className=\"list-group\">\n          {this.state.questions.map((question, i) =>\n            {return (isEditMode\n              ? <input key={i} onChange={this.handleChange.bind(this, i)} type=\"text\" className=\"form-control question mt-2\" value={this.state.questions[i]} autoFocus={!i} />\n              : <button key={i} onClick={this.handleClick.bind(this, i)} type=\"button\" className=\"btn btn-light btn-block question\">Q{i}: {question}</button>\n            )}\n            // <button key={i} type=\"button\" className=\"list-group-item list-group-item-action question mt-2\">Q{i}: {question}</button>\n          )}\n        </div>\n        {/* <Question key={i} data_index={i+1} question={question}></Question> */}\n        <div className=\"container text-center mt-5\">\n              <button type=\"button\" onClick={this.recordTime} className=\"btn shadow ml-3 btn-dark btn-lg light-border\">Repeat</button>\n              <button type=\"button\" onClick={this.recordTime} className=\"btn shadow ml-3 btn-dark btn-lg light-border\">Done</button>\n        </div>\n        <Audio></Audio>\n      </div>\n    );\n  }\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}