{"ast":null,"code":"var _jsxFileName = \"/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport SmashLab from './SmashLab.png';\nimport './Login.css';\nimport history from '../../history';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      const data = {\n        q: this.state.enum\n      };\n      const params = new URLSearchParams({\n        'q': event.target.value\n      });\n      const url = `http://127.0.0.1:5000/search?${params.toString()}`;\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    };\n\n    this.handleConsent = () => {\n      this.setState({\n        consent: !this.state.consent\n      });\n    };\n\n    this.experimenterReady = () => {\n      const data = {\n        q: this.state.enum\n      };\n      fetch('http://127.0.0.1:5000/search', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n      this.setState({\n        eready: true\n      });\n    };\n\n    this.participantReady = () => {\n      this.setState({\n        eready: true\n      });\n    };\n\n    this.participantReady = () => {\n      history.push('/Home');\n    };\n\n    this.state = {\n      pnum: \"\",\n      enum: \"\",\n      eready: false,\n      pready: false,\n      consent: false\n    };\n  }\n\n  render() {\n    const isValidLogin = !(this.state.pnum.trim() === \"\" || this.state.enum.trim() === \"\" || !this.state.consent);\n    let expButton, partButton;\n\n    if (isValidLogin) {\n      expButton = /*#__PURE__*/React.createElement(\"button\", {\n        id: \"eready\",\n        onClick: this.experimenterReady,\n        className: \"btn btn-lg btn-primary btn-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }\n      }, \"Experimenter Ready\");\n    } else {\n      expButton = \"\";\n    }\n\n    if (this.state.eready) {\n      partButton = /*#__PURE__*/React.createElement(\"button\", {\n        id: \"pready\",\n        onClick: this.participantReady,\n        className: \"btn btn-lg btn-info btn-block\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 20\n        }\n      }, \"Participant Ready\");\n    } else {\n      partButton = \"\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"login text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"mb-4 smash_logo\",\n      src: SmashLab,\n      alt: \"Smash Lab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"h3 mb-3 font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Please sign in\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"pnum\",\n      id: \"inputPnum\",\n      className: \"form-control\",\n      placeholder: \"Participant Number\",\n      value: this.state.pnum,\n      required: true,\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"enum\",\n      id: \"inputEnum\",\n      className: \"form-control\",\n      placeholder: \"Experimenter number\",\n      value: this.state.enum,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkbox mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleConsent,\n      type: \"checkbox\",\n      value: \"econsent\",\n      checked: this.state.eready,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }), \" Experimenter's Consent\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkbox mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleConsent,\n      type: \"checkbox\",\n      value: \"pconsent\",\n      checked: this.state.pready,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), \" Participant's Consent\")), expButton, partButton));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Login/Login.js"],"names":["React","Component","SmashLab","history","Login","constructor","props","handleChange","event","setState","target","name","value","data","q","state","enum","params","URLSearchParams","url","toString","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","catch","error","handleConsent","consent","experimenterReady","eready","participantReady","push","pnum","pready","render","isValidLogin","trim","expButton","partButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SmashLab from './SmashLab.png'\nimport './Login.css';\nimport history from '../../history';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pnum: \"\",\n      enum: \"\",\n      eready: false,\n      pready: false,\n      consent: false\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    \n    const data = { q: this.state.enum };\n\n    const params = new URLSearchParams({ 'q': event.target.value });\n    const url = `http://127.0.0.1:5000/search?${ params.toString() }`\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Success:', data);\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n\n  }\n\n  handleConsent = () => {\n    this.setState({\n      consent: !this.state.consent\n    });\n  }\n\n  experimenterReady = () => {\n    const data = { q: this.state.enum };\n    \n    fetch('http://127.0.0.1:5000/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Success:', data);\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n    \n    this.setState ({\n      eready: true\n    });\n  }\n\n  participantReady = () => {\n    this.setState ({\n      eready: true\n    });\n  }\n\n\n  participantReady = () => {\n    history.push('/Home')\n  }\n\n  render() {\n\n    const isValidLogin = !(this.state.pnum.trim() === \"\" || this.state.enum.trim() === \"\" || !this.state.consent);\n    let expButton, partButton;\n    if (isValidLogin) {\n      expButton = <button id=\"eready\" onClick={this.experimenterReady} className=\"btn btn-lg btn-primary btn-block\">Experimenter Ready</button>;\n    }\n    else {\n      expButton = \"\";\n    }\n\n    if (this.state.eready) {\n      partButton = <button id=\"pready\" onClick={this.participantReady} className=\"btn btn-lg btn-info btn-block\" type=\"submit\">Participant Ready</button>;\n    }\n    else {\n      partButton = \"\";\n    }\n\n    return (\n      <form className=\"login text-center\">\n        <div className=\"form-signin\">\n          <img className=\"mb-4 smash_logo\" src={SmashLab} alt=\"Smash Lab\" />\n          <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n          <input onChange={this.handleChange} type=\"text\" name=\"pnum\" id=\"inputPnum\" className=\"form-control\" placeholder=\"Participant Number\" value={this.state.pnum} required autoFocus />\n          <input onChange={this.handleChange} type=\"text\" name=\"enum\" id=\"inputEnum\" className=\"form-control\" placeholder=\"Experimenter number\" value={this.state.enum} required />\n          <div className=\"checkbox mb-3\">\n            <label>\n                <input onChange={this.handleConsent} type=\"checkbox\" value=\"econsent\" checked={this.state.eready}/> Experimenter's Consent\n            </label>\n          </div>\n          <div className=\"checkbox mb-3\">\n            <label>\n                <input onChange={this.handleConsent} type=\"checkbox\" value=\"pconsent\" checked={this.state.pready}/> Participant's Consent\n            </label>\n          </div>\n          {expButton}\n          {partButton}\n        </div>\n      </form>\n     );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}