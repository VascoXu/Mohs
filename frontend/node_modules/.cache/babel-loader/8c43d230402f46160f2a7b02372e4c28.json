{"ast":null,"code":"var _jsxFileName = \"/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Procedure/Procedure.js\";\nimport React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"./Procedure.css\";\nimport { insertToDatabase, formatEpoch } from \"../helpers\";\n\nclass Procedure extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getProcedure = () => {\n      // Get a list of procedures\n      fetch('/api/procedure').then(response => response.json()).then(data => {\n        this.procedure = data;\n      });\n    };\n\n    this.done = () => {\n      // Update step\n      this.setState({\n        step: this.state.step + 1\n      }); // Insert data to database\n\n      var timeElapsed = formatEpoch(Math.floor(Date.now() / 1000) - this.props.startTime);\n      var data = {\n        timestamp: timeElapsed,\n        action: `Procedure (Step ${this.state.step}): ${this.procedure[this.state.step]}`\n      };\n      insertToDatabase(this.props.db, data);\n    };\n\n    this.back = () => {\n      this.setState({\n        step: this.state.step - 1\n      });\n    };\n\n    this.procedure = [];\n    this.state = {\n      step: 0\n    };\n  }\n\n  componentDidMount() {// Fetch procedure after mount\n    // this.getProcedure();\n  }\n\n  render() {\n    this.procedure = [\"Wash hands w/ soap\", \"Put day x supplies on clean surface outside bathroom\", \"Fresh clean towel & trash bag in bathroom\", \"Shower, remove, gently wash\", \"Dry body and wound then go to set up\", \"Pat dry w/wound gauze or qtip\", \"Cut non-stick dressing then open vaseline\", \"Using 2 qtips thickly “ice” wound with vaseline\", \"Cover with gauze and tape on\", \"See you tomorrow\"];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full-height mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-white text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Procedure\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, \"Step \", this.state.step, \":\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"step\",\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, \" \", this.procedure[this.state.step], \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.repeaat,\n      className: \"shadow btn ml-3 btn-light btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Repeat\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.done,\n      className: \"shadow btn ml-3 btn-light btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Done\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.doctor,\n      className: \"shadow btn ml-3 btn-danger btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Doctor\"), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"sound-clips\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group mt-2 mb-5 procedure-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, this.procedure.map((step, i) => {\n      return isEditMode ? /*#__PURE__*/React.createElement(\"input\", {\n        key: i,\n        onChange: this.handleChange,\n        type: \"text\",\n        className: \"form-control question\",\n        defaultValue: step,\n        value: this.state.questions[i],\n        autoFocus: !i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        id: 'l' + i,\n        className: `list-group-item ${this.state.step === i ? 'active' : ''}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }\n      }, step);\n    }))))));\n  }\n\n}\n\nexport default Procedure;","map":{"version":3,"sources":["/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Procedure/Procedure.js"],"names":["React","Component","insertToDatabase","formatEpoch","Procedure","constructor","props","getProcedure","fetch","then","response","json","data","procedure","done","setState","step","state","timeElapsed","Math","floor","Date","now","startTime","timestamp","action","db","back","componentDidMount","render","repeaat","doctor","map","i","isEditMode","handleChange","questions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"./Procedure.css\";\nimport { insertToDatabase, formatEpoch } from \"../helpers\";\n\n\nclass Procedure extends Component {\n\n  constructor(props) {\n    super(props);\n    this.procedure = [];\n    this.state = {\n      step: 0\n    };\n  }\n\n  componentDidMount() {\n    // Fetch procedure after mount\n    // this.getProcedure();\n  }\n\n  getProcedure = () => {\n    // Get a list of procedures\n    fetch('/api/procedure')\n    .then(response => response.json())\n    .then(data => {\n      this.procedure = data;\n    })\n  }\n\n  done = () => {\n    // Update step\n    this.setState({\n      step: (this.state.step + 1) \n    });\n\n    // Insert data to database\n    var timeElapsed = formatEpoch(Math.floor(Date.now() / 1000) - this.props.startTime);\n    var data = {timestamp: timeElapsed, action: `Procedure (Step ${this.state.step}): ${this.procedure[this.state.step]}`};\n    insertToDatabase(this.props.db, data);\n  }\n\n  back = () => {\n    this.setState({\n      step: (this.state.step - 1)\n    });\n  }\n  \n  render() {\n\n    this.procedure = [\n      \"Wash hands w/ soap\", \n      \"Put day x supplies on clean surface outside bathroom\",\n      \"Fresh clean towel & trash bag in bathroom\",\n      \"Shower, remove, gently wash\",\n      \"Dry body and wound then go to set up\",\n      \"Pat dry w/wound gauze or qtip\",\n      \"Cut non-stick dressing then open vaseline\",\n      \"Using 2 qtips thickly “ice” wound with vaseline\",\n      \"Cover with gauze and tape on\",\n      \"See you tomorrow\"\n    ];\n  \n    return (\n      <div className=\"full-height mt-2\">\n        <h2 className=\"text-white text-center\">Procedure</h2>\n        <hr/>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"card mt-2\">\n                <div className=\"card-body text-center\">\n                  <h5 className=\"card-title\">Step {this.state.step}:</h5>\n                  <hr/>\n                  <p id=\"step\" className=\"card-text\"> {this.procedure[this.state.step]} </p>\n                </div>\n              </div>\n              <div className=\"text-center mt-5\">\n                <button type=\"button\" onClick={this.repeaat} className=\"shadow btn ml-3 btn-light btn-lg dark-border\">Repeat</button>\n                <button type=\"button\" onClick={this.done} className=\"shadow btn ml-3 btn-light btn-lg dark-border\">Done</button>\n                <button type=\"button\" onClick={this.doctor} className=\"shadow btn ml-3 btn-danger btn-lg dark-border\">Doctor</button>\n                <section className=\"sound-clips\">\n                </section>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <ul className=\"list-group mt-2 mb-5 procedure-list\">\n                {this.procedure.map((step, i) => \n                  {return (isEditMode\n                    ? <input key={i} onChange={this.handleChange} type=\"text\" className=\"form-control question\" defaultValue={step} value={this.state.questions[i]} autoFocus={!i} />\n                    : <li key={i} id={'l' + i} className={`list-group-item ${(this.state.step === i) ? 'active' : ''}`}>{step}</li>\n                  )}\n                  \n                )}\n              </ul>            \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Procedure;"]},"metadata":{},"sourceType":"module"}