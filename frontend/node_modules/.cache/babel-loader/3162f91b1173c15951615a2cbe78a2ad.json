{"ast":null,"code":"var _jsxFileName = \"/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport SmashLab from './SmashLab.png';\nimport './Login.css';\nimport history from '../../history';\nimport { insertToDatabase } from '../helpers';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const userEnum = event.target.value;\n      this.setState({\n        [event.target.name]: userEnum\n      }); // Lookup Experimenter in the database (IndexedDB)\n\n      if (event.target.name === \"enum\") {\n        var transaction = db.transaction('users', 'readonly');\n        var objectStore = transaction.objectStore('log');\n\n        objectStore.getAll().onsuccess = function (event) {\n          console.log(event.target.result);\n          return event.target.result;\n        };\n      }\n    };\n\n    this.handleExperimenterConsent = () => {\n      this.setState({\n        econsent: !this.state.econsent\n      });\n    };\n\n    this.handleParticipantConsent = () => {\n      this.setState({\n        pconsent: !this.state.pconsent\n      });\n    };\n\n    this.experimenterReady = () => {\n      const data = {\n        'enum': this.state.enum\n      };\n      insertToDatabase(this.db, \"enums\", this.state.enum);\n      fetch('/search', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(data => {\n        console.log('Success:', data);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n      this.setState({\n        eready: true\n      });\n    };\n\n    this.participantReady = () => {\n      this.setState({\n        eready: true\n      });\n    };\n\n    this.participantReady = () => {\n      history.push('/Home');\n    };\n\n    this.state = {\n      pnum: \"\",\n      enum: \"\",\n      eready: false,\n      econsent: false,\n      pconsent: false,\n      edit: false\n    };\n  }\n\n  render() {\n    const isValidLogin = !(this.state.pnum.trim() === \"\" || this.state.enum.trim() === \"\" || !this.state.econsent || !this.state.pconsent);\n    let expButton, partButton;\n\n    if (isValidLogin) {\n      expButton = /*#__PURE__*/React.createElement(\"button\", {\n        id: \"eready\",\n        onClick: this.experimenterReady,\n        className: \"btn btn-lg btn-primary btn-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }\n      }, \"Experimenter Ready\");\n    } else {\n      expButton = \"\";\n    }\n\n    if (this.state.eready) {\n      partButton = /*#__PURE__*/React.createElement(\"button\", {\n        id: \"pready\",\n        onClick: this.participantReady,\n        className: \"btn btn-lg btn-info btn-block\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 20\n        }\n      }, \"Participant Ready\");\n    } else {\n      partButton = \"\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"mb-4 smash_logo\",\n      src: SmashLab,\n      alt: \"Smash Lab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"h3 mb-3 font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Please sign in\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"enum\",\n      id: \"inputEnum\",\n      className: \"form-control\",\n      placeholder: \"Experimenter number\",\n      value: this.state.enum,\n      required: true,\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"mr-1\",\n      onChange: this.handleExperimenterConsent,\n      type: \"checkbox\",\n      value: \"econsent\",\n      checked: this.state.econsent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), \" consent\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"pnum\",\n      id: \"inputPnum\",\n      className: \"form-control\",\n      placeholder: \"Participant Number\",\n      value: this.state.pnum,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"mr-1\",\n      onChange: this.handleParticipantConsent,\n      type: \"checkbox\",\n      value: \"pconsent\",\n      checked: this.state.pconsent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }), \" consent\"))), expButton, partButton));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Login/Login.js"],"names":["React","Component","SmashLab","history","insertToDatabase","Login","constructor","props","handleChange","event","userEnum","target","value","setState","name","transaction","db","objectStore","getAll","onsuccess","console","log","result","handleExperimenterConsent","econsent","state","handleParticipantConsent","pconsent","experimenterReady","data","enum","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","eready","participantReady","push","pnum","edit","render","isValidLogin","trim","expButton","partButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SmashLab from './SmashLab.png'\nimport './Login.css';\nimport history from '../../history';\nimport { insertToDatabase } from '../helpers';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pnum: \"\",\n      enum: \"\",\n      eready: false,\n      econsent: false,\n      pconsent: false,\n      edit: false\n    };\n  }\n\n  handleChange = (event) => {\n    const userEnum = event.target.value;\n    this.setState({\n      [event.target.name]: userEnum\n    });\n    \n    // Lookup Experimenter in the database (IndexedDB)\n    if (event.target.name === \"enum\") {\n      var transaction = db.transaction('users', 'readonly');\n      var objectStore = transaction.objectStore('log');\n      objectStore.getAll().onsuccess = function(event) {\n        console.log(event.target.result);\n        return event.target.result\n      };\n\n    }\n  }\n\n  // Handle Experimenter checkbox\n  handleExperimenterConsent = () => {\n    this.setState({\n      econsent: !this.state.econsent,\n    });\n  }\n\n  // Handle Participant checkbox\n  handleParticipantConsent = () => {\n    this.setState({\n      pconsent: !this.state.pconsent,\n    });\n  }\n\n  experimenterReady = () => {\n    const data = { 'enum': this.state.enum };\n\n\n    insertToDatabase(this.db, \"enums\", this.state.enum);\n\n\n\n  \n    fetch('/search', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Success:', data);\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n    \n    this.setState ({\n      eready: true\n    });\n  }\n\n  participantReady = () => {\n    this.setState ({\n      eready: true\n    });\n  }\n\n  participantReady = () => {\n    history.push('/Home')\n  }\n\n  render() {\n\n    const isValidLogin = !(this.state.pnum.trim() === \"\" || this.state.enum.trim() === \"\" || !this.state.econsent || !this.state.pconsent);\n    let expButton, partButton;\n    if (isValidLogin) {\n      expButton = <button id=\"eready\" onClick={this.experimenterReady} className=\"btn btn-lg btn-primary btn-block\">Experimenter Ready</button>;\n    }\n    else {\n      expButton = \"\";\n    }\n\n    if (this.state.eready) {\n      partButton = <button id=\"pready\" onClick={this.participantReady} className=\"btn btn-lg btn-info btn-block\" type=\"submit\">Participant Ready</button>;\n    }\n    else {\n      partButton = \"\";\n    }\n\n    return (\n      <div className=\"login text-center\">\n        <div className=\"form-signin\">\n          <img className=\"mb-4 smash_logo\" src={SmashLab} alt=\"Smash Lab\" />\n          <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n\n          {/* Experimenter Input Group */}\n          <div className=\"input-group mb-2\">\n            <input onChange={this.handleChange} type=\"text\" name=\"enum\" id=\"inputEnum\" className=\"form-control\" placeholder=\"Experimenter number\" value={this.state.enum} required autoFocus />\n            <div className=\"input-group-append\">\n              <div className=\"input-group-text\">\n                <input className=\"mr-1\" onChange={this.handleExperimenterConsent} type=\"checkbox\" value=\"econsent\" checked={this.state.econsent} /> consent\n              </div>\n            </div>\n          </div>\n\n          {/* Participant Input Group */}\n          <div className=\"input-group mb-3\">\n            <input onChange={this.handleChange} type=\"text\" name=\"pnum\" id=\"inputPnum\" className=\"form-control\" placeholder=\"Participant Number\" value={this.state.pnum} required />\n            <div className=\"input-group-append\">\n              <div className=\"input-group-text\">\n                <input className=\"mr-1\" onChange={this.handleParticipantConsent} type=\"checkbox\" value=\"pconsent\" checked={this.state.pconsent} /> consent\n              </div>\n            </div>\n          </div>\n\n\n          {expButton}\n          {partButton}\n        </div>\n      </div>\n     );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}