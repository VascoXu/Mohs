{"ast":null,"code":"var _jsxFileName = \"/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Questions/Questions.js\";\nimport React, { Component } from \"react\";\nimport Question from './Question';\nimport \"../../App.css\";\nimport \"./Questions.css\";\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.recordTime = () => {\n      // Ensure getUserMedia is supported\n      if (this.state.record) {\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n          console.log('getUserMedia supported.');\n          navigator.mediaDevices.getUserMedia( // constraints - only audio needed for this app\n          {\n            audio: true\n          }) // Success callback, start recording\n          .then(stream => this.startRecording(stream)) // Error callback\n          .catch(function (err) {\n            console.log('The following getUserMedia error occured: ' + err);\n          });\n        } else {\n          console.log('getUserMedia not supported on your browser!');\n        }\n      } else {\n        this.stopRecording();\n      }\n\n      this.setState({\n        record: !this.state.record\n      });\n    };\n\n    this.startRecording = stream => {\n      // Start recording\n      this.mediaRecorder = new MediaRecorder(stream);\n      this.mediaRecorder.start(); // Start visualizing audio\n\n      this.visualize(stream);\n      console.log(this.mediaRecorder.state);\n      console.log(\"recorder started\");\n      var dat = this;\n\n      this.mediaRecorder.ondataavailable = function (e) {\n        dat.chunks.push(e.data);\n      };\n    };\n\n    this.visualize = stream => {\n      const canvas = document.querySelector('.visualizer');\n      const canvasCtx = canvas.getContext(\"2d\");\n      let audioCtx;\n\n      if (!audioCtx) {\n        audioCtx = new AudioContext();\n      }\n\n      const source = audioCtx.createMediaStreamSource(stream);\n      const analyser = audioCtx.createAnalyser();\n      analyser.fftSize = 2048;\n      const bufferLength = analyser.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      source.connect(analyser); //analyser.connect(audioCtx.destination);\n\n      draw();\n\n      function draw() {\n        const WIDTH = canvas.width;\n        const HEIGHT = canvas.height;\n        requestAnimationFrame(draw);\n        analyser.getByteTimeDomainData(dataArray);\n        canvasCtx.fillStyle = 'rgb(200, 200, 200)';\n        canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\n        canvasCtx.lineWidth = 2;\n        canvasCtx.strokeStyle = 'rgb(0, 0, 0)';\n        canvasCtx.beginPath();\n        let sliceWidth = WIDTH * 1.0 / bufferLength;\n        let x = 0;\n\n        for (let i = 0; i < bufferLength; i++) {\n          let v = dataArray[i] / 128.0;\n          let y = v * HEIGHT / 2;\n\n          if (i === 0) {\n            canvasCtx.moveTo(x, y);\n          } else {\n            canvasCtx.lineTo(x, y);\n          }\n\n          x += sliceWidth;\n        }\n\n        canvasCtx.lineTo(canvas.width, canvas.height / 2);\n        canvasCtx.stroke();\n      }\n    };\n\n    this.stopRecording = e => {\n      // Stop and save the recording\n      const soundClips = document.querySelector('.sound-clips');\n      console.log(\"recorder onstopped\");\n      const clipName = prompt('Enter a name for your sound clip');\n      const clipContainer = document.createElement('article');\n      const clipLabel = document.createElement('p');\n      const audio = document.createElement('audio');\n      const deleteButton = document.createElement('button');\n      clipContainer.classList.add('clip');\n      audio.setAttribute('controls', '');\n      deleteButton.innerHTML = \"Delete\";\n      clipLabel.innerHTML = clipName;\n      clipContainer.appendChild(audio);\n      clipContainer.appendChild(clipLabel);\n      clipContainer.appendChild(deleteButton);\n      soundClips.appendChild(clipContainer);\n      const blob = new Blob(this.chunks, {\n        'type': 'audio/ogg; codecs=opus'\n      });\n      this.chunks = [];\n      const audioURL = window.URL.createObjectURL(blob);\n      audio.src = audioURL;\n\n      deleteButton.onclick = function (e) {\n        let evtTgt = e.target;\n        evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode);\n      };\n    };\n\n    this.stop = () => {\n      // Stop recording\n      this.mediaRecorder.stop();\n      console.log(this.mediaRecorder.state);\n      console.log(\"recorder stopped\");\n\n      this.mediaRecorder.onstop = e => this.stopRecording(e);\n    };\n\n    this.state = {\n      record: true\n    };\n    this.mediaRecorder = {};\n    this.chunks = [];\n  }\n\n  render() {\n    const questions = [\"Can I use Purell/hand sanitizer?\", \"How long do I wash my hands for?\", \"How long do I keep the band-aid for?\", \"Unanswerable\"];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container full-height mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }, \"Questions\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }), questions.map((question, i) => /*#__PURE__*/React.createElement(Question, {\n      key: i,\n      data_index: i + 1,\n      question: question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container text-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.recordTime,\n      className: \"btn shadow ml-3 btn-dark btn-lg light-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, \"Reply\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.recordTime,\n      className: \"btn shadow ml-3 btn-dark btn-lg light-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, \"Repeat\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.recordTime,\n      className: \"btn shadow ml-3 btn-dark btn-lg light-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, \"Done\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fixed-bottom ml-5 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.recordTime,\n      className: \"btn btn-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      className: \"bi bi-mic-fill\",\n      width: \"3em\",\n      height: \"3em\",\n      viewBox: \"0 0 16 16\",\n      fill: \"currentColor\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0V3z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      \"fill-rule\": \"evenodd\",\n      d: \"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"canvas\", {\n      className: \"ml-5 visualizer\",\n      height: \"60px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Questions;","map":{"version":3,"sources":["/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Questions/Questions.js"],"names":["React","Component","Question","Questions","constructor","props","recordTime","state","record","navigator","mediaDevices","getUserMedia","console","log","audio","then","stream","startRecording","catch","err","stopRecording","setState","mediaRecorder","MediaRecorder","start","visualize","dat","ondataavailable","e","chunks","push","data","canvas","document","querySelector","canvasCtx","getContext","audioCtx","AudioContext","source","createMediaStreamSource","analyser","createAnalyser","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","connect","draw","WIDTH","width","HEIGHT","height","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","soundClips","clipName","prompt","clipContainer","createElement","clipLabel","deleteButton","classList","add","setAttribute","innerHTML","appendChild","blob","Blob","audioURL","window","URL","createObjectURL","src","onclick","evtTgt","target","parentNode","removeChild","stop","onstop","render","questions","map","question"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Question from './Question'\nimport \"../../App.css\";\nimport \"./Questions.css\";\n\n\nclass Questions extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      record: true\n    };\n    this.mediaRecorder = {};\n    this.chunks = [];\n  }\n\n  recordTime = () => {\n    // Ensure getUserMedia is supported\n    if (this.state.record) {\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        console.log('getUserMedia supported.');\n        navigator.mediaDevices.getUserMedia (\n           // constraints - only audio needed for this app\n           {\n              audio: true\n           })\n  \n           // Success callback, start recording\n           .then((stream) => this.startRecording(stream))\n     \n           // Error callback\n           .catch(function(err) {\n              console.log('The following getUserMedia error occured: ' + err);\n           }\n        );\n      } else {\n        console.log('getUserMedia not supported on your browser!');\n      }\n    }\n    else {\n      this.stopRecording();\n    }\n\n    this.setState({\n      record: !this.state.record\n    });\n\n  }\n\n  startRecording = (stream) => {\n    // Start recording\n    this.mediaRecorder = new MediaRecorder(stream);\n    this.mediaRecorder.start();\n\n    // Start visualizing audio\n    this.visualize(stream);\n\n    console.log(this.mediaRecorder.state);\n    console.log(\"recorder started\");\n\n    var dat = this;\n    this.mediaRecorder.ondataavailable = function(e) {\n      dat.chunks.push(e.data);\n    }\n  }\n\n\n  visualize = (stream) => {\n    const canvas = document.querySelector('.visualizer');\n    const canvasCtx = canvas.getContext(\"2d\");\n    let audioCtx;\n\n    if(!audioCtx) {\n      audioCtx = new AudioContext();\n    }\n  \n    const source = audioCtx.createMediaStreamSource(stream);\n  \n    const analyser = audioCtx.createAnalyser();\n    analyser.fftSize = 2048;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n  \n    source.connect(analyser);\n    //analyser.connect(audioCtx.destination);\n  \n    draw()\n  \n    function draw() {\n      const WIDTH = canvas.width\n      const HEIGHT = canvas.height;\n  \n      requestAnimationFrame(draw);\n  \n      analyser.getByteTimeDomainData(dataArray);\n  \n      canvasCtx.fillStyle = 'rgb(200, 200, 200)';\n      canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\n  \n      canvasCtx.lineWidth = 2;\n      canvasCtx.strokeStyle = 'rgb(0, 0, 0)';\n  \n      canvasCtx.beginPath();\n  \n      let sliceWidth = WIDTH * 1.0 / bufferLength;\n      let x = 0;\n  \n  \n      for(let i = 0; i < bufferLength; i++) {\n  \n        let v = dataArray[i] / 128.0;\n        let y = v * HEIGHT/2;\n  \n        if(i === 0) {\n          canvasCtx.moveTo(x, y);\n        } else {\n          canvasCtx.lineTo(x, y);\n        }\n  \n        x += sliceWidth;\n      }\n  \n      canvasCtx.lineTo(canvas.width, canvas.height/2);\n      canvasCtx.stroke();\n  \n    }\n  }\n\n  stopRecording = (e) => {\n    // Stop and save the recording\n    const soundClips = document.querySelector('.sound-clips');\n\n    console.log(\"recorder onstopped\");\n    \n    const clipName = prompt('Enter a name for your sound clip');\n  \n    const clipContainer = document.createElement('article');\n    const clipLabel = document.createElement('p');\n    const audio = document.createElement('audio');\n    const deleteButton = document.createElement('button');\n             \n    clipContainer.classList.add('clip');\n    audio.setAttribute('controls', '');\n    deleteButton.innerHTML = \"Delete\";\n    clipLabel.innerHTML = clipName;\n  \n    clipContainer.appendChild(audio);\n    clipContainer.appendChild(clipLabel);\n    clipContainer.appendChild(deleteButton);\n    soundClips.appendChild(clipContainer);\n    \n    const blob = new Blob(this.chunks, { 'type' : 'audio/ogg; codecs=opus' });\n    this.chunks = [];\n    const audioURL = window.URL.createObjectURL(blob);\n    audio.src = audioURL;\n  \n    deleteButton.onclick = function(e) {\n      let evtTgt = e.target;\n      evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode);\n    }\n  }\n\n  stop = () => {\n    // Stop recording\n    this.mediaRecorder.stop();\n    console.log(this.mediaRecorder.state);\n    console.log(\"recorder stopped\");\n    this.mediaRecorder.onstop = (e) => this.stopRecording(e);\n  }\n\n  render() {\n    const questions = [\n      \"Can I use Purell/hand sanitizer?\", \n      \"How long do I wash my hands for?\",\n      \"How long do I keep the band-aid for?\",\n      \"Unanswerable\"\n    ];\n\n    return (\n      <div className=\"container full-height mt-2\">\n        <h2 className=\"text-center\">Questions</h2>\n        <hr/>\n        {questions.map((question, i) => \n            <Question key={i} data_index={i+1} question={question}></Question>\n        )}\n        <div className=\"container text-center mt-5\">\n              <button type=\"button\" onClick={this.recordTime} className=\"btn shadow ml-3 btn-dark btn-lg light-border\">Reply</button>\n              <button type=\"button\" onClick={this.recordTime} className=\"btn shadow ml-3 btn-dark btn-lg light-border\">Repeat</button>\n              <button type=\"button\" onClick={this.recordTime} className=\"btn shadow ml-3 btn-dark btn-lg light-border\">Done</button>\n        </div>\n        \n        <div className=\"fixed-bottom ml-5 mb-5\">\n          <button onClick={this.recordTime} className=\"btn btn-light\">\n            <svg className=\"bi bi-mic-fill\" width=\"3em\" height=\"3em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M5 3a3 3 0 0 1 6 0v5a3 3 0 0 1-6 0V3z\"/>\n              <path fill-rule=\"evenodd\" d=\"M3.5 6.5A.5.5 0 0 1 4 7v1a4 4 0 0 0 8 0V7a.5.5 0 0 1 1 0v1a5 5 0 0 1-4.5 4.975V15h3a.5.5 0 0 1 0 1h-7a.5.5 0 0 1 0-1h3v-2.025A5 5 0 0 1 3 8V7a.5.5 0 0 1 .5-.5z\"/>\n            </svg>\n          </button>\n          <canvas className=\"ml-5 visualizer\" height=\"60px\"></canvas>\n        </div>\n\n\n      </div>\n    );\n\n\n  }\n}\n\nexport default Questions;"]},"metadata":{},"sourceType":"module"}