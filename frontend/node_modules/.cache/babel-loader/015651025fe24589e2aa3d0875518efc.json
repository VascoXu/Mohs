{"ast":null,"code":"var _jsxFileName = \"/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Procedure/Procedure.js\";\nimport React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"./Procedure.css\";\nimport { insertToDatabase, formatEpoch } from \"../helpers\";\n\nclass Procedure extends Component {\n  constructor(props) {\n    super(props);\n\n    this.done = () => {\n      this.setState({\n        step: this.state.step + 1\n      }); // Insert data to database\n\n      var timeElapsed = formatEpoch(Math.floor(Date.now() / 1000) - this.props.startTime);\n      var data = {\n        timestamp: timeElapsed,\n        action: `Procedure (Step ${this.state.step}): ${this.procedure[this.state.step]}`\n      };\n      insertToDatabase(this.props.db, data);\n    };\n\n    this.back = () => {\n      this.setState({\n        step: this.state.step - 1\n      });\n    };\n\n    this.state = {\n      step: 0\n    };\n    this.procedure = [];\n  }\n\n  componentDidMount() {\n    this.getProcedure();\n  }\n\n  render() {\n    this.procedure = [\"Wash hands w/ soap\", \"Put day x supplies on clean surface outside bathroom\", \"Fresh clean towel & trash bag in bathroom\", \"Shower, remove, gently wash\", \"Dry body and wound then go to set up\", \"Pat dry w/wound gauze or qtip\", \"Cut non-stick dressing then open vaseline\", \"Using 2 qtips thickly “ice” wound with vaseline\", \"Cover with gauze and tape on\", \"See you tomorrow\"];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full-height mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-white text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Procedure\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, \"Step \", this.state.step, \":\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"step\",\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, \" \", this.procedure[this.state.step], \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.repeaat,\n      className: \"shadow btn ml-3 btn-light btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Repeat\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.done,\n      className: \"shadow btn ml-3 btn-light btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Done\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.doctor,\n      className: \"shadow btn ml-3 btn-danger btn-lg dark-border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"Doctor\"), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"sound-clips\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-group mt-2 mb-5 procedure-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, this.procedure.map((step, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      id: 'l' + i,\n      className: `list-group-item ${this.state.step === i ? 'active' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, step)))))));\n  }\n\n}\n\nexport default Procedure;","map":{"version":3,"sources":["/Users/vascoxu/Desktop/smash/mohs/frontend/src/Components/Procedure/Procedure.js"],"names":["React","Component","insertToDatabase","formatEpoch","Procedure","constructor","props","done","setState","step","state","timeElapsed","Math","floor","Date","now","startTime","data","timestamp","action","procedure","db","back","componentDidMount","getProcedure","render","repeaat","doctor","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../App.css\";\nimport \"./Procedure.css\";\nimport { insertToDatabase, formatEpoch } from \"../helpers\";\n\n\nclass Procedure extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 0\n    };\n    this.procedure = [];\n  }\n\n  componentDidMount() {\n    this.getProcedure();\n  }\n\n  \n\n\n  done = () => {\n    this.setState({\n      step: (this.state.step + 1) \n    });\n\n    // Insert data to database\n    var timeElapsed = formatEpoch(Math.floor(Date.now() / 1000) - this.props.startTime);\n    var data = {timestamp: timeElapsed, action: `Procedure (Step ${this.state.step}): ${this.procedure[this.state.step]}`};\n    insertToDatabase(this.props.db, data);\n  }\n\n  back = () => {\n    this.setState({\n      step: (this.state.step - 1)\n    });\n  }\n  \n  render() {\n\n    this.procedure = [\n      \"Wash hands w/ soap\", \n      \"Put day x supplies on clean surface outside bathroom\",\n      \"Fresh clean towel & trash bag in bathroom\",\n      \"Shower, remove, gently wash\",\n      \"Dry body and wound then go to set up\",\n      \"Pat dry w/wound gauze or qtip\",\n      \"Cut non-stick dressing then open vaseline\",\n      \"Using 2 qtips thickly “ice” wound with vaseline\",\n      \"Cover with gauze and tape on\",\n      \"See you tomorrow\"\n    ];\n  \n    return (\n      <div className=\"full-height mt-2\">\n        <h2 className=\"text-white text-center\">Procedure</h2>\n        <hr/>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"card mt-2\">\n                <div className=\"card-body text-center\">\n                  <h5 className=\"card-title\">Step {this.state.step}:</h5>\n                  <hr/>\n                  <p id=\"step\" className=\"card-text\"> {this.procedure[this.state.step]} </p>\n                </div>\n              </div>\n              <div className=\"text-center mt-5\">\n                <button type=\"button\" onClick={this.repeaat} className=\"shadow btn ml-3 btn-light btn-lg dark-border\">Repeat</button>\n                <button type=\"button\" onClick={this.done} className=\"shadow btn ml-3 btn-light btn-lg dark-border\">Done</button>\n                <button type=\"button\" onClick={this.doctor} className=\"shadow btn ml-3 btn-danger btn-lg dark-border\">Doctor</button>\n                <section className=\"sound-clips\">\n                </section>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <ul className=\"list-group mt-2 mb-5 procedure-list\">\n                {this.procedure.map((step, i) => \n                  <li key={i} id={'l' + i} className={`list-group-item ${(this.state.step === i) ? 'active' : ''}`}>{step}</li>\n                )}\n              </ul>            \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Procedure;"]},"metadata":{},"sourceType":"module"}